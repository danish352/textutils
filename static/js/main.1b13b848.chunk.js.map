{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","toggleTxt","onClick","toggleMode","htmlFor","modeTxt","TextForm","useState","text","setText","toggleTxtC","value","toggleTxtA","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","class","role","msg","defaultProps","App","setAlert","message","setTimeout","setmode","setToggleTxt","settoggleTxtA","settoggleTxtC","setmodeTxt","body","heading","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b13b848.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] = useState(\r\n    //     {\r\n    //         color: \"black\",\r\n    //         backgroundColor:\"white\"\r\n    //     }\r\n    // )\r\n    let myStyle ={\r\n        color : props.mode ==='dark'?'white':'black',\r\n        backgroundColor: props.mode ==='dark'?'#0e3978':'white',\r\n    }\r\n    \r\n    return (\r\n    <div className=\"container my-4 py-3 rounded\" style={myStyle}>\r\n        <h1>About us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\" >\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                <strong>Analyze your text</strong> \r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <strong>Free to use</strong>    \r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                <strong>Browser Compatible</strong>    \r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch ${props.toggleTxt}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.modeTxt}mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"set title here\",\r\n    aboutText: \"set about text here\"\r\n}\r\n\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been converted to Uppercase\" , \"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been converted to Lowercase\" , \"success\")\r\n    }\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = \"\"\r\n        setText(newText)\r\n        props.showAlert(\"Text has been Cleared\" , \"success\")\r\n    }\r\n    \r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text has been copied to clipboard\" , \"success\")\r\n    }\r\n    \r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces have been removed\" , \"success\")\r\n    }\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"onChange\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 style={{color: props.toggleTxtC}}>Enter Text Below</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor: props.toggleTxtA , color: props.toggleTxtC}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary\" onClick={handleUpClick}>Convert Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\">\r\n            <h2 style={{color: props.toggleTxtC}}>Your Text Summary</h2>\r\n            <p style={{color: props.toggleTxtC}}>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p style={{color: props.toggleTxtC}}>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n            <h2 style={{color: props.toggleTxtC}}>Preview</h2>\r\n            <p style={{color: props.toggleTxtC}}>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.msg}</strong>\r\n        </div>}\r\n    </div>    \r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  // alert state\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message , type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      showAlert(null)\n    }, 2000);\n  }\n  // dark mode states\n  const [mode, setmode] = useState(\"light\")\n  const [toggleTxt, setToggleTxt] = useState(\"text-dark\")\n  const [toggleTxtA, settoggleTxtA] = useState(\"white\")\n  const [toggleTxtC, settoggleTxtC] = useState(\"black\")\n  const [modeTxt, setmodeTxt] = useState(\"Dark-\")\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setmode(\"dark\")\n      setToggleTxt(\"text-light\")\n      document.body.style.backgroundColor = \"#0C2C5C\"\n      settoggleTxtA(\"darkgrey\")\n      settoggleTxtC(\"white\")\n      setmodeTxt(\"Light-\")\n      showAlert(\"Dark-mode has been activated\" , \"success\")\n    } else{\n      setmode(\"light\")\n      setToggleTxt(\"text-dark\")\n      document.body.style.backgroundColor = \"white\"\n      settoggleTxtA(\"white\")\n      settoggleTxtC(\"black\")\n      setmodeTxt(\"Dark-\")\n      showAlert(\"Light-mode has been activated\" , \"success\")\n    }\n  }\n\n  return (\n    <>\n    <Router>\n{/* <Navbar/> */}\n<Navbar title = \"TextUtils\" aboutText = \"About\" mode={mode} toggleMode={toggleMode} toggleTxt={toggleTxt} modeTxt={modeTxt}/>\n<Alert alert={alert}/>\n    <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading = \"Enter Text Below\" toggleTxtA={toggleTxtA} toggleTxtC={toggleTxtC}/>\n      <Switch>\n          {/* <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading = \"Enter Text Below\" toggleTxtA={toggleTxtA} toggleTxtC={toggleTxtC}/>\n          </Route> */}\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading = \"Enter Text Below\" toggleTxtA={toggleTxtA} toggleTxtC={toggleTxtC}/>\n          </Route>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n           </Route>\n      </Switch>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}