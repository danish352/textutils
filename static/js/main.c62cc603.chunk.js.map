{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","toggleTxt","onClick","toggleMode","htmlFor","modeTxt","TextForm","useState","text","setText","style","color","toggleTxtC","value","backgroundColor","toggleTxtA","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","role","msg","defaultProps","aboutText","App","setAlert","message","setTimeout","setmode","setToggleTxt","settoggleTxtA","settoggleTxtC","setmodeTxt","body","heading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c62cc603.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch ${props.toggleTxt}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.modeTxt}mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"set title here\",\r\n    aboutText: \"set about text here\"\r\n}\r\n\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been converted to Uppercase\" , \"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been converted to Lowercase\" , \"success\")\r\n    }\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = \"\"\r\n        setText(newText)\r\n        props.showAlert(\"Text has been Cleared\" , \"success\")\r\n    }\r\n    \r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text has been copied to clipboard\" , \"success\")\r\n    }\r\n    \r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces have been removed\" , \"success\")\r\n    }\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"onChange\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\" \");\r\n    \r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 style={{color: props.toggleTxtC}}>Enter Text Below</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor: props.toggleTxtA , color: props.toggleTxtC}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\">\r\n            <h2 style={{color: props.toggleTxtC}}>Your Text Summary</h2>\r\n            <p style={{color: props.toggleTxtC}}>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p style={{color: props.toggleTxtC}}>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n            <h2 style={{color: props.toggleTxtC}}>Preview</h2>\r\n            <p style={{color: props.toggleTxtC}}>{text.length>0?text:\"Enter something in the text box above for preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.msg}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  // alert state\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message , type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      showAlert(null)\n    }, 2000);\n  }\n  // dark mode states\n  const [mode, setmode] = useState(\"light\")\n  const [toggleTxt, setToggleTxt] = useState(\"text-dark\")\n  const [toggleTxtA, settoggleTxtA] = useState(\"white\")\n  const [toggleTxtC, settoggleTxtC] = useState(\"black\")\n  const [modeTxt, setmodeTxt] = useState(\"Dark-\")\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setmode(\"dark\")\n      setToggleTxt(\"text-light\")\n      document.body.style.backgroundColor = \"#0C2C5C\"\n      settoggleTxtA(\"darkgrey\")\n      settoggleTxtC(\"white\")\n      setmodeTxt(\"Light-\")\n      showAlert(\"Dark-mode has been activated\" , \"success\")\n    } else{\n      setmode(\"light\")\n      setToggleTxt(\"text-dark\")\n      document.body.style.backgroundColor = \"white\"\n      settoggleTxtA(\"white\")\n      settoggleTxtC(\"black\")\n      setmodeTxt(\"Dark-\")\n      showAlert(\"Light-mode has been activated\" , \"success\")\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n{/* <Navbar/> */}\n<Navbar title = \"TextUtils\" aboutText = \"About\" mode={mode} toggleMode={toggleMode} toggleTxt={toggleTxt} modeTxt={modeTxt}/>\n<Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading = \"Enter Text Below\" toggleTxtA={toggleTxtA} toggleTxtC={toggleTxtC}/>\n          {/* </Route> */}\n      {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}